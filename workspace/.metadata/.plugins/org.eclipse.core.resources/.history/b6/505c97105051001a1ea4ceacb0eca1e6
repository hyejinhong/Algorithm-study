package boj;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class BOJ_12865 {
	
	static int n;
	static int k;
	static int[] w = new int[101];
	static int[] v = new int[101];
	static int[][] cache = new int[101][100000];
	
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		
		for(int i=0; i<n; i++) {
			StringTokenizer stk = new StringTokenizer(br.readLine());
			w[i] = Integer.parseInt(stk.nextToken());
			v[i] = Integer.parseInt(stk.nextToken());
		}
		
		Arrays.fill(cache, -1);
	}

	// index 물건까지 고려했을 때, 현재 weight 무게, 현재까지 value의 합 sum
	public static int pack(int index, int weight, int sum) {
		// 기저: 무게 넘음
		if(weight >= k) {
			return sum;
		}
		// 기저: 다 고려해봤음
		if(index == 0) {
			return v[0];
		}
		
		// 캐시가 있다면
		if(cache[index][weight] != -1) {
			return cache[index][weight];
		}
		
		// 캐시가 없다면 계산
		int ret = 0;
		
	}
}
