package boj;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class BOJ_10844 {

	static int n;
	final static int MOD = 1000000000;
	static long[][] cache = new long[101][10];
	
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		
		for(long[] row : cache) {
			Arrays.fill(row, -1);
		}
		
		for(int i=1; i<10; i++) {
			cache[1][i] = 1;
		}
	}

	public static long count(int num, int last) {
		// 기저: 길이
		if(num == n+1) {
			return 0;
		}
		// 기저: 뒷자리 숫자
		if(last == 10) {
			return 0;
		}
		
		// 캐시가 있으면
		if(cache[num][last] != -1) {
			return cache[num][last];
		}
		
		// 캐시가 없으면
		long ret = 0;
		
		if(last == 0) {
			ret = count(n-1, last+1);
		}
		else if(last == 9) {
			ret = count(n-1, last-1);
		}
		else {
			ret = count(n-1, last-1) + count(n-1, last+1);	
		}
		cache[num][last] = ret;
		return ret;
	}
}
