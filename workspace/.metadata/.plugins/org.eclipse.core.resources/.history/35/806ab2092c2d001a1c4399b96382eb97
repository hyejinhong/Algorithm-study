package project;

import java.util.*;

public class BOJ_10819 {
	static int max = Integer.MIN_VALUE;
	
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		
		int n = scan.nextInt();
		int[] arr = new int[n];
		for(int i=0; i<arr.length; i++) {
			arr[i] = scan.nextInt();
		}
		ArrayList<Integer> reordered = new ArrayList<>();
		boolean[] check = new boolean[n];
		solve(n, arr, reordered, check);
	}
	
	// 재정렬을 한다.
	// 식 계산해서
	// 최댓값을 찾는다.
	
	public static void solve(int n, int[] arr, ArrayList<Integer> reordered, boolean[] check) {
		// 기저: 재정렬이 끝나면 배열을 반환한다.
		if(n == reordered.size()) {
//			printArray(reordered);
			int temp = caculate(reordered);
			System.out.println("temp: " + temp);
			max = Math.max(temp, max);
			System.out.println("max: " + max);
			System.out.println("*********************");
			return;
		}
		
		for(int i=0; i<n; i++) {
			if(!check[i]) {
				check[i] = true;
				reordered.add(arr[i]);
				solve(n, arr, reordered, check);
				reordered.remove(reordered.size() - 1);
				check[i] = false;
			}
		}
		System.out.println("* MAX * " + max);
//		return null; // 쓰읍..
	}
	
	public static int caculate(ArrayList<Integer> arr) {
		int result = 0;
		
		for(int i=0; i<arr.size()-1; i++) {
			result += Math.abs((arr.get(i)-arr.get(i+1))); // arr[n-2] - arr[n-1]까지
		}
		return result;
	}
	
	public static void printArray(ArrayList<Integer> picked) {
		for(int i=0; i<picked.size(); i++) {
			System.out.print(picked.get(i) + " ");
		}
		System.out.println();
	}

}
