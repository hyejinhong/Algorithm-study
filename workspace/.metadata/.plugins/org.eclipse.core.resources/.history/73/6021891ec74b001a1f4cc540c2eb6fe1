package boj;

import java.util.*;
public class BOJ_1149 {
	
	static int n;
	static int[][] cost = new int[1000][3]; // cost[i][0] red
	static int[] colors = new int[1000];
	static int[] cache = new int[1000];
	static final int RED = 0;
	static final int GREEN = 1;
	static final int BLUE = 2;
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan = new Scanner(System.in);
		n = scan.nextInt();
		for(int i=0; i<n; i++) {
			for(int j=0; j<3; j++) {
				cost[i][j] = scan.nextInt();	
			}
		}
		
		Arrays.fill(cache, -1);
		calculate(n);
	}
	
	// num개의 집을 모두 칠하는 최소 비용을 반환
	// color는 n-1번째 집의 색깔
	public static int calculate(int num) {
		// 기저: 다 칠했다
		if(num < 0) {
			return 0;
		}
		
		// 캐시가 있다면..
		if(cache[num] != -1) {
			return cache[num];
		}
		
		// 캐시가 없다면.. 계산
		int ret = 0;
		
		// 어떤 색으로 칠할지 정하기
		if(colors[num-1] == RED) {
			colors[num] = cost[num][GREEN] <= cost[num][BLUE] ? GREEN : BLUE;
		}
		else if(colors[num-1] == GREEN) {
			colors[num] = cost[num][RED] <= cost[num][BLUE] ? RED : BLUE;
		}
		else if(colors[num-1] == BLUE) {
			colors[num] = cost[num][GREEN] <= cost[num][RED] ? GREEN : RED;
		}
		
		cache[num] = calculate(num-1) + cost[num][colors[num]];
		return cache[num];
	}

}
